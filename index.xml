<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devflow</title>
    <link>https://devflow.github.io/</link>
    <description>Recent content on devflow</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 23 Apr 2020 19:40:23 +0900</lastBuildDate>
    
	<atom:link href="https://devflow.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Github 프로팁 #2</title>
      <link>https://devflow.github.io/posts/12/</link>
      <pubDate>Thu, 23 Apr 2020 19:40:23 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/12/</guid>
      <description>이 게시물은 &amp;lsquo;GitHub Protips: Tips, tricks, hacks, and secrets from Lee Reilly&amp;rsquo;을 번역/정리한 게시물이다. 번역 전문가도 아니고 많은 의역/직역있으니&amp;hellip; 모호한 내용은 원본 게시물을 참고바람. 😉
 1. Fuzzy file finder 어느 저장소에서든 파일을 검색하기 원한다면 t 키를 누른 후 타이핑하면 된다.
 2. 편하게 파일과 디렉토리 탐색하기 Octotree는 트리형태로 손쉽게 파일과 디렉토리를 탐색할 수 있는 브라우저 확장프로그램이다.
 보너스 포인트: Github Enterprise에서도 작동한다.
재밌는 사실: 몇 년 전 Github Enterprise를 지원하려는 개발자에게 연락했는데, 만약 당신이 Github를 위한 브라우저 확장프로그램을 구축하고 있고 Github Enterprise도 지원 할 예정이라면, Github Developer Program에 참가해서 개발자 라이센스를 받을 수 있다.</description>
    </item>
    
    <item>
      <title>Github 프로팁 #1</title>
      <link>https://devflow.github.io/posts/10/</link>
      <pubDate>Sat, 18 Apr 2020 21:08:14 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/10/</guid>
      <description>이 게시물은 &amp;lsquo;GitHub Protips: Tips, tricks, hacks, and secrets from Jason Etcovitch&amp;rsquo;을 번역/정리한 게시물이다. 번역 전문가도 아니고 많은 의역/직역있으니&amp;hellip; 모호한 내용은 원본 게시물을 참고바람. 😉
 Github Action와 Probot 이 내용은 팁보다는 더 복잡한 이야기 이긴한데 자동화 도구를 사용하보면 분명 마음에 들것이다. Github Actions과 Probot은 별도의 프로젝트로 개발자가 보일러플레이트(인증 및 웹훅 이벤트 핸들링과 같은)를 고려하지않게 추상화를 제공하여 Github에서 기능 확장을 할 수 있도록하는 목표를 가지고 있다. 관심이 생긴다면 Github 엔지니어인 Jason Etcovitch의 블로그를 살펴보자.</description>
    </item>
    
    <item>
      <title>NPM이 Github에게 인수</title>
      <link>https://devflow.github.io/posts/9/</link>
      <pubDate>Sat, 18 Apr 2020 13:04:28 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/9/</guid>
      <description>결국 NPM이 공식적으로 Github에게 인수되었다. 앞으로 Github에서 유용하게 모듈들을 관리할 수 있으지&amp;hellip; 많은 기대가 된다.
마이크로소프트가 오픈소스 생태계를 점령하는 행보가 무섭다.
참고 https://github.blog/2020-04-15-npm-has-joined-github/
https://blog.npmjs.org/post/612764866888007680/next-phase-montage</description>
    </item>
    
    <item>
      <title>Pop!_OS 19.10 AMD/INTEL Mirror 다운로드</title>
      <link>https://devflow.github.io/posts/8/</link>
      <pubDate>Fri, 17 Apr 2020 22:26:30 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/8/</guid>
      <description>다운로드를 제공하는 서버가 단 하나 밖에 없는데, 그것마저 한국에선 속도가 매우 느리기 때문에 시간을 들여 다운받은 것을 구글 드라이브를 통해 공유한다.
system76에서 Pop!_OS 20.xx이 최근 베타로 릴리즈 되었던데, GNOME + TWM 라서 매우 기대중이다.
Pop!_OS 홈페이지 / Github
파일 체크섬
 MD5 160e3ab12bd93deec7e5786bf2f90aea SHA1 bdb2402bc5c795142c420db32ee0c8914e3cf42e SHA256 bf43424db9bfc5d2c28b7c61326716001d1780053d95a0c122a514b49a198544  구글 드라이브
pop-os_19.10_amd64_intel_15.iso (2.1 GB)</description>
    </item>
    
    <item>
      <title>Thinkpad E495 백라이트 키보드로 교체하기</title>
      <link>https://devflow.github.io/posts/7/</link>
      <pubDate>Fri, 10 Apr 2020 15:59:39 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/7/</guid>
      <description>TL;DR; 백라이트 안돼요, 안돼&amp;hellip; 왜? 이런짓을? 개인적으로 데스크탑이 잠시 없는터라 노트북이 필요했고 대충 검색좀 해보니까, 저렴하고 나에게 맞는 씽크패드 E495를 구입해서 쓰고있는데, 그렇게 자주는 아니지만 가끔 어두운 환경에서 사용할 때 백라이트가 너무나 필요했다.
바꾸면 되긴할까? AMD Ryzen SoC을 가지는 씽크패드 E 라인들은 어째 죄다 백라이트가 없다. 인텔은 되는데&amp;hellip; 이때 눈치 챘다. 여러 커뮤니티를 돌아다녀보니 백라이트 키보드를 바꿔도 되지 않는다! 라는 글들이 많이 보였다. 아무튼 안된단 소리.
그래도&amp;hellip; 주문했다. 약 8일만에 도착.</description>
    </item>
    
    <item>
      <title>i3wm를 알아보자</title>
      <link>https://devflow.github.io/posts/6/</link>
      <pubDate>Thu, 09 Apr 2020 00:03:43 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/6/</guid>
      <description>i3에 대해서 기존 DE(Desktop Environment) 사용자의 시선에서 알아보도록하자.  i3? i3은 GNU/Linux, BSD 운영체제를 위한 Tiling window manager 중 하나임.
Tiling window manager? 흔하게 접할 수 있는 TWM에는 윈도우즈(Windows)의 타일링 시스템이 있다. 시작+방향키 단축키나, 창을 한쪽으로 드래그해서 각 윈도우(창)들을 겹치지 않게 정렬을 해본 기억이 있을 것이다. 이러한 메커니즘으로 창들을 정렬할 수 있게 하는 프로그램.
 X11의 twm(Tab window manager)와는 다르다.  왜 i3 인가? i3는 TWM중에서 사용이 제일 쉽다고 느끼고 무엇보다도 문서화가 아주 잘 되어 있고 사용자들도 많으므로 사용중 문제가 생겼거나, 궁금한 점은 다양한 커뮤니티를 통해 순식간에 해결할 수 있다는 점.</description>
    </item>
    
    <item>
      <title>OpenCV를 이용해서 UI 오브젝트 검출</title>
      <link>https://devflow.github.io/posts/5/</link>
      <pubDate>Sat, 04 Apr 2020 15:00:07 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/5/</guid>
      <description>개발 환경은 아래와 같다.
 OpenCV 4.2 (Built for Android with NONFREE) Android 10  내가 검출하고자 하는 데이터는 실제(Real Object)가 아니고 안드로이드의 Display에서 특정 UI 컴포넌트를 검출하는 작업이 필요했다.
먼저 시도한 방법은 OpenCV의 TemplateMatching.
하지만 여러 디바이스 환경에서의 UI 컴포넌트의 사이즈와 변형(반응형 디자인)으로 인해 TemplateMatching의 특성상 검출하려는 오브젝트의 크기가 검출 대상 소스에서의 크기는 같아야 하고 Multi-scaling의 방식이나 MatPyramid 등 다양한 scale-case 를 반영해도 변형된 데이터에서는 검출이 힘들었다.
그래서 시도해본 것은 SURF, SIFT 그리고 ORB.</description>
    </item>
    
    <item>
      <title>안드로이드 MediaProjection 을 통해서 ImageReader로 버퍼 읽을시 검은 화면</title>
      <link>https://devflow.github.io/posts/4/</link>
      <pubDate>Sat, 04 Apr 2020 14:00:07 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/4/</guid>
      <description>우선 5.0(API 21) 이상에서는 대부분~ 잘되는데 특정 환경(대부분 예뮬레이터들)에서 MediaProjection을 ImageReader로 통해서 Surface를 읽으면 아무 데이터가 없거나 NULL일 수 있다.
이는 네이티브, 예뮬 등 일부 환경에서 (물론 5.0도 이상일 수 있다!) openGLES 호환(EGL_RECORDABLE_ANDROID 값이 없는 등.. )이 좋지 않아서 발생하는 문제이다.
결론은 대상 문제가 발생하는 기기에서는 별도의 방법으로 처리해야 한다는 것&amp;hellip; 일단 구글의 비공식 테스트 앱 (grafika)를 살펴보고 구현하면 된다.
우선 grafika의 gles를 모드 임포트 해준다.
 VirtualDisplay가 사용할 수 있는 Surface를 만들어 준다.</description>
    </item>
    
    <item>
      <title>리눅스 설치 후 윈도우 UEFI 복구</title>
      <link>https://devflow.github.io/posts/3/</link>
      <pubDate>Sat, 04 Apr 2020 13:45:07 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/3/</guid>
      <description>문제 환경  윈도우(Windows 10)가 sdb 에 설치됨. 리눅스(Arch Linux, GRUB)를 sda에 설치 후, 리눅스에서 os-prober가 Windows의 진입점을 찾지 못함.  준비물  부팅가능한 Windows 설치 미디어 (USB, DVD&amp;hellip;)[1]  해결  Windows 설치 미디어로 부팅한다. 문제해결 -&amp;gt; 고급 -&amp;gt; 명령 프롬프트 diskpart list disk 입력 후 윈도우가 설치된 디스크X를 찾는다. sel disk X list vol 입력 후 EFI 파티션Y을 찾아보자. 파티션은 파일시스템 FAT32을 가지며 용량은 ~512MB 정도함. sel vol Y assign letter=T: EFI 파티션을 T:에 할당하자.</description>
    </item>
    
    <item>
      <title>frost-nova</title>
      <link>https://devflow.github.io/projects/frost-nova/</link>
      <pubDate>Fri, 03 Apr 2020 22:00:35 +0900</pubDate>
      
      <guid>https://devflow.github.io/projects/frost-nova/</guid>
      <description>hello world;</description>
    </item>
    
    <item>
      <title>두번째 테스트</title>
      <link>https://devflow.github.io/posts/2/</link>
      <pubDate>Fri, 03 Apr 2020 22:00:35 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/2/</guid>
      <description>ㅗ모몸</description>
    </item>
    
    <item>
      <title>첫 글이자 테스트 포스트</title>
      <link>https://devflow.github.io/posts/1/</link>
      <pubDate>Thu, 02 Apr 2020 22:00:35 +0900</pubDate>
      
      <guid>https://devflow.github.io/posts/1/</guid>
      <description>그래서 이게 뭐냐? 음 좀 살펴보고&amp;hellip; hello();
H3 ~ H4 😄 H5 🐒  Proxy.prototype.close = function () { var self = this; this.httpServer.close(); delete this.httpServer; if (this.httpsServer) { this.httpsServer.close(); delete this.httpsServer; delete this.wssServer; delete this.sslServers; } if (this.sslServers) { (Object.keys(this.sslServers)).forEach(function (srvName) { var server = self.sslServers[srvName].server; if (server) server.close(); delete self.sslServers[srvName]; }); } return this; }; 첫 글은 이따구로 생겨야 제맛이지.. while (d &amp;lt; end) { while (d &amp;lt; end &amp;amp;&amp;amp; (*d == &amp;#39; &amp;#39; || *d == &amp;#39;\n&amp;#39; || *d == &amp;#39;\r&amp;#39;)) ++d; const char *start = d; while (d &amp;lt; end &amp;amp;&amp;amp; *d !</description>
    </item>
    
  </channel>
</rss>